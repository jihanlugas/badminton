definitions:
  request.ChangePassword:
    properties:
      confirmPasswd:
        maxLength: 200
        type: string
      currentPasswd:
        maxLength: 200
        type: string
      passwd:
        maxLength: 200
        type: string
    required:
    - confirmPasswd
    - currentPasswd
    - passwd
    type: object
  request.CreateCompany:
    properties:
      balance:
        type: integer
      description:
        type: string
      email:
        maxLength: 200
        type: string
      fullname:
        maxLength: 80
        type: string
      name:
        type: string
      noHp:
        maxLength: 20
        type: string
      passwd:
        maxLength: 200
        type: string
      username:
        maxLength: 20
        type: string
    required:
    - email
    - fullname
    - name
    - noHp
    - passwd
    - username
    type: object
  request.CreateGame:
    properties:
      ballPrice:
        type: integer
      description:
        type: string
      gameDt:
        type: string
      gorId:
        type: string
      name:
        type: string
      normalGamePrice:
        type: integer
      rubberGamePrice:
        type: integer
    required:
    - gorId
    - name
    type: object
  request.CreateGameplayer:
    properties:
      ballPrice:
        type: integer
      gameId:
        type: string
      normalGame:
        type: integer
      playerId:
        type: string
      rubberGame:
        type: integer
    required:
    - gameId
    - playerId
    type: object
  request.CreateGor:
    properties:
      address:
        type: string
      ballPrice:
        type: integer
      companyId:
        type: string
      description:
        type: string
      name:
        type: string
      normalGamePrice:
        type: integer
      rubberGamePrice:
        type: integer
    required:
    - companyId
    - name
    type: object
  request.CreatePlayer:
    properties:
      address:
        type: string
      companyId:
        type: string
      email:
        type: string
      gender:
        enum:
        - MALE
        - FEMALE
        type: string
      isActive:
        type: boolean
      name:
        type: string
      noHp:
        type: string
    required:
    - companyId
    - name
    type: object
  request.CreateTransaction:
    properties:
      companyId:
        type: string
      isDebit:
        type: boolean
      name:
        type: string
      price:
        type: integer
    required:
    - companyId
    - name
    - price
    type: object
  request.CreateUser:
    properties:
      email:
        maxLength: 200
        type: string
      fullname:
        maxLength: 80
        type: string
      noHp:
        maxLength: 20
        type: string
      passwd:
        maxLength: 200
        type: string
      username:
        maxLength: 20
        type: string
    required:
    - email
    - fullname
    - noHp
    - passwd
    - username
    type: object
  request.Signin:
    properties:
      passwd:
        maxLength: 200
        type: string
      username:
        type: string
    required:
    - passwd
    - username
    type: object
  request.UpdateCompany:
    properties:
      balance:
        type: integer
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  request.UpdateGame:
    properties:
      ballPrice:
        type: integer
      description:
        type: string
      gameDt:
        type: string
      gorId:
        type: string
      name:
        type: string
      normalGamePrice:
        type: integer
      rubberGamePrice:
        type: integer
    required:
    - gorId
    - name
    type: object
  request.UpdateGameplayer:
    properties:
      ballPrice:
        type: integer
      gameId:
        type: string
      normalGame:
        type: integer
      playerId:
        type: string
      rubberGame:
        type: integer
    required:
    - gameId
    - playerId
    type: object
  request.UpdateGor:
    properties:
      address:
        type: string
      ballPrice:
        type: integer
      companyId:
        type: string
      description:
        type: string
      name:
        type: string
      normalGamePrice:
        type: integer
      rubberGamePrice:
        type: integer
    required:
    - companyId
    - name
    type: object
  request.UpdatePlayer:
    properties:
      address:
        type: string
      companyId:
        type: string
      email:
        type: string
      gender:
        enum:
        - MALE
        - FEMALE
        type: string
      isActive:
        type: boolean
      name:
        type: string
      noHp:
        type: string
    required:
    - companyId
    - name
    type: object
  request.UpdateUser:
    properties:
      email:
        maxLength: 200
        type: string
      fullname:
        maxLength: 80
        type: string
      noHp:
        maxLength: 20
        type: string
      username:
        maxLength: 20
        type: string
    required:
    - email
    - fullname
    - noHp
    - username
    type: object
  response.Response:
    properties:
      code:
        type: integer
      message:
        type: string
      payload:
        type: object
      status:
        type: boolean
    type: object
host: localhost:1323
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Badminton API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: ようこそ、美しい世界へ
          schema:
            type: string
      tags:
      - Ping
  /company:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateCompany'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Company
  /company/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Company
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Company
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateCompany'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Company
  /company/page:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: createName
        type: string
      - in: query
        name: description
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: sortField
        type: string
      - in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Company
  /game:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateGame'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Game
  /game/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Game
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Game
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateGame'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Game
  /game/page:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: description
        type: string
      - in: query
        name: gorId
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: sortField
        type: string
      - in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Game
  /gameplayer:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateGameplayer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Gameplayer
  /gameplayer/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Gameplayer
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Gameplayer
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateGameplayer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Gameplayer
  /gameplayer/page:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: gorId
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: playerId
        type: string
      - in: query
        name: sortField
        type: string
      - in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Gameplayer
  /gor:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateGor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Gor
  /gor/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Gor
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Gor
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateGor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Gor
  /gor/page:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: address
        type: string
      - in: query
        name: companyId
        type: string
      - in: query
        name: description
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: sortField
        type: string
      - in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Gor
  /player:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreatePlayer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Player
  /player/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Player
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Player
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePlayer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Player
  /player/page:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: address
        type: string
      - in: query
        name: companyId
        type: string
      - in: query
        name: email
        type: string
      - in: query
        name: gender
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: noHp
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: sortField
        type: string
      - in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Player
  /refresh-token:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Authentication
  /sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.Signin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      tags:
      - Authentication
  /sign-out:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      tags:
      - Authentication
  /transaction:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Transaction
  /transaction/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Transaction
  /transaction/page:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: companyId
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: sortField
        type: string
      - in: query
        name: sortOrder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - Transaction
  /user:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - User
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - User
  /user/page:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: email
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: noHp
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: sortField
        type: string
      - in: query
        name: sortOrder
        type: string
      - in: query
        name: username
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - User
  /user/reset-password:
    post:
      consumes:
      - application/json
      parameters:
      - description: json req body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.ChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
